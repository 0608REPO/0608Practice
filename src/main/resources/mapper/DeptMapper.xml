<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="com.spring.mapper.DeptMapper">
 	 	
 	<select id="getAllDepts" resultType="com.spring.dto.Dept">
 		SELECT deptno, dname, loc FROM dept
 	</select>
 	
 	<select id="getDeptByDeptno" resultMap="selectDeptMap">
 		SELECT deptno, dname, loc FROM dept WHERE deptno = #{deptno}
 	</select>

 	<!-- 반환 객체 타입 - Map -->
 	<resultMap type="com.spring.dto.Dept" id="selectDeptMap">
 		<result column="deptno" property="deptno"/>
 		<result column="dname" property="dname"/>
 		<result column="loc" property="loc"/>
 	</resultMap>
 	
 	<insert id="insertDept" parameterType="com.spring.dto.Dept">
 		INSERT INTO dept VALUES (#{deptno}, #{dname}, #{loc})
 	</insert>
 	
 	<update id="updateDnameAndLoc" parameterType="com.spring.dto.Dept">
 		UPDATE dept 
 		SET dname = #{dname}, 
 			loc = #{loc} 
 		WHERE deptno = #{deptno}
 	</update>
 	
 	<delete id="deleteDeptByDeptno" parameterType="_int">
 		DELETE FROM dept
 		WHERE deptno = #{deptno}
 	</delete>
 	
 	<!-- getDynamicDeptno -->
 	<select id="getDynamicDeptno" parameterType="hashmap" resultType="com.spring.dto.Dept">
 		SELECT deptno, dname, loc FROM dept
 		<if test="deptno != null">
 			WHERE deptno = #{deptno}
 		</if>
 		<!--  <if test="deptno lt null">
 			WHERE deptno = #{deptno}
 		</if> --> 	
 		
 		<!--  <if test="deptno <![CDATA[<]]> null">
 			WHERE deptno = #{deptno}
 		</if> -->	
 		
 		<!-- 
 		<![CDATA[
 		select *
 		from dept
 		where deptno < 30
 		]]>
 		 -->
 	</select>
 	
 	<!-- getDynamicChoose -->
 	<select id="getDynamicChoose" parameterType="hashmap" resultType="com.spring.dto.Dept">
 		SELECT deptno, dname, loc FROM dept
 		<choose>
 			<when test="dname != null">
 				WHERE dname = #{dname}
 			</when>
 			<when test="loc != null">
 				WHERE loc = #{loc}
 			</when>
 			<otherwise></otherwise>
 		</choose>
 	</select>
 	
 	 	<!-- getDynamicWhereTrim version:WHERE-->
<!-- <select id="getDynamicWhereTrim" parameterType="hashmap" resultType="com.spring.dto.Dept">
 		SELECT deptno, dname, loc FROM dept
 		<where>
 			<if test="dname != null">
 				dname = #{dname}
 			</if>
 			<if test="loc != null">
 				and loc = #{loc}
 			</if>
 		</where>	
 	</select> -->
 	
 	<!-- getDynamicWhereTrim version:TRIM-->
 	<select id="getDynamicWhereTrim" parameterType="hashmap" resultType="com.spring.dto.Dept">
 		SELECT deptno, dname, loc FROM dept
 		<trim prefix="WHERE" prefixOverrides="OR |AND"> <!-- "|AND"처럼 붙여서 써주어야 적용이 된다. -->
 			<if test="dname != null">
 				dname = #{dname}
 			</if>
 			<if test="loc != null">
 				and loc = #{loc}
 			</if>
 		</trim>	
 	</select>
 	
 	<!-- getDynamicWhereTrim version:Dept 객체 전달-->
 	<select id="getDynamicWhereTrim2" parameterType="com.spring.dto.Dept" resultType="com.spring.dto.Dept">
 		SELECT deptno, dname, loc FROM dept
 		<trim prefix="WHERE" prefixOverrides="OR |AND"> <!-- "|AND"처럼 붙여서 써주어야 적용이 된다. -->
 			<if test="dname != null">
 				dname = #{dname}
 			</if>
 			<if test="loc != null">
 				and loc = #{loc}
 			</if>
 		</trim>	
 	</select>
 	
 	<!-- updateDynamicSet -->
 	<update id="updateDynamicSet" parameterType="hashmap">
 		UPDATE dept
 		<!-- <set>
 			<if test="dname != null">
 				dname = #{dname},
 			</if>
 			<if test="loc != null">
 				loc = #{loc}
 			</if>
 		</set> -->
 		
 		<trim prefix="SET" suffixOverrides=",">
 			<if test="dname != null">
 				dname = #{dname},
 			</if>
 			<if test="loc != null">
 				loc = #{loc}
 			</if>
 		</trim>
 		
 		WHERE deptno = #{deptno}
 	</update>
 	
 	<!-- getDynamicForeachDeptno -->
	<select id="getDynamicForeachDeptno" resultType="com.spring.dto.Dept">
		SELECT deptno, dname, loc FROM dept
		<where>
			<foreach item="deptno" collection="list"
					open="deptno IN (" separator="," close=")" >
				#{deptno}
			</foreach>
		</where>
	
	</select>
	
	<!-- insertDynamicForeachDeptnoList -->
	<insert id="insertDynamicForeachDeptnoList" parameterType="arraylist" >
		INSERT ALL
		<foreach item="dept" collection="list">
			INTO dept (deptno, dname, loc)
			VALUES (#{dept.deptno}, #{dept.dname}, #{dept.loc})
		</foreach>
		SELECT * FROM dual
	
	</insert>
	
 	
 </mapper>